openapi: 3.0.1

info:
  title: Skynet Web3 API
  description: |-
    **This is an alpha testing version, and we are continuously developing and making changes. Please visit frequently and stay updated.**

    Our cutting-edge Web3 API provides enhanced functionality and superior performance across key blockchain operations, including Accounts, NFTs, Blocks, Collections, Contracts, and Transactions. Designed with the latest technology, our API offers a seamless experience for developers, enabling efficient and scalable interactions with blockchain networks.
  contact: { }
  version: v3.0.0
servers:
  - url: https://api-gateway.skymavis.com/skynet/ronin/web3/v2
    description: Mainnet
  - url: https://api-gateway.skymavis.com/skynet-test/ronin/web3/v2
    description: Testnet
paths:
  /accounts/{address}/activities/search:
    post:
      tags:
        - Accounts
      summary: Search for matched account activities
      description: Get an account's activities on the Ronin chain (Transfers, Approvals, Mint, Burn, Marketplace, Swap, Deposit, Staking, Add/Remove Liquidity).
      parameters:
        - name: address
          in: path
          required: true
          description: 'Account address. Example: 0xf6fd5fca4bd769ba495b29b98dba5f2ecf4ceed3'
          schema:
            type: string

      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountActivitySearchRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/accountActivity'
                      paging:
                        type: object
                        properties:
                          nextCursor:
                            type: string
        "500":
          description: internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /accounts/{address}/nfts:
    get:
      tags:
        - Accounts
      summary: Get owned NFTs of an address
      parameters:
        - name: address
          in: path
          required: true
          description: 'Account address. Example: 0xf6fd5fca4bd769ba495b29b98dba5f2ecf4ceed3'
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: 'Paging limit'
          schema:
            type: integer
        - name: cursor
          in: query
          required: false
          description: 'Paging cursor'
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/AccountNFTResponse'
                      paging:
                        type: object
                        properties:
                          nextCursor:
                            type: string
        "500":
          description: internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /accounts/{address}/fungible_tokens:
    get:
      tags:
        - Accounts
      summary: Get fungible token balances of an address, including the native token (RON)
      parameters:
        - name: address
          in: path
          required: true
          description: 'Account address. Example: 0xf6fd5fca4bd769ba495b29b98dba5f2ecf4ceed3'
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: 'Paging limit'
          schema:
            type: integer
        - name: cursor
          in: query
          required: false
          description: 'Paging cursor'
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/AccountCollectionResponse'
                      paging:
                        type: object
                        properties:
                          nextCursor:
                            type: string
        "500":
          description: internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /accounts/{address}/collections:
    get:
      tags:
        - Accounts
      summary: Get list of collections having NFTs belonging to an address
      parameters:
        - name: address
          in: path
          required: true
          description: 'Account address. Example: 0xf6fd5fca4bd769ba495b29b98dba5f2ecf4ceed3'
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: 'Paging limit'
          schema:
            type: integer
        - name: cursor
          in: query
          required: false
          description: 'Paging cursor'
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/AccountCollectionResponse'
                      paging:
                        type: object
                        properties:
                          nextCursor:
                            type: string
        "500":
          description: internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /accounts/{address}/contracts/{contractAddress}/tokens:
    get:
      tags:
        - Accounts
      summary: Get NFT list of an address and contract
      parameters:
        - name: address
          in: path
          required: true
          description: 'Account address. Example: 0xf6fd5fca4bd769ba495b29b98dba5f2ecf4ceed3'
          schema:
            type: string
        - name: contractAddress
          in: path
          required: true
          description: 'ContractAddress address. Example: 0x32950db2a7164ae833121501c797d79e7b79d74c'
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: 'Paging limit'
          schema:
            type: integer
        - name: cursor
          in: query
          required: false
          description: 'Paging cursor'
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/AccountCollectionResponse'
                      paging:
                        type: object
                        properties:
                          nextCursor:
                            type: string
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /accounts/{address}/contracts/{contractAddress}:
    get:
      tags:
        - Accounts
      summary: Get balance of an address and contract
      parameters:
        - name: address
          in: path
          required: true
          description: 'Account address. Example: 0xf6fd5fca4bd769ba495b29b98dba5f2ecf4ceed3'
          schema:
            type: string
        - name: contractAddress
          in: path
          required: true
          description: 'ContractAddress address. Example: 0x32950db2a7164ae833121501c797d79e7b79d74c'
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/AccountCollectionResponse'
        "500":
          description: internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /accounts/{address}/contracts:
    post:
      tags:
        - Accounts
      summary: Get balances of an address by multiple contracts
      parameters:
        - name: address
          in: path
          required: true
          description: 'Account address. Example: 0xf6fd5fca4bd769ba495b29b98dba5f2ecf4ceed3'
          schema:
            type: string
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionIdsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/AccountCollectionResponse'
        "500":
          description: internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /accounts/{address}/tokens/transfers:
    get:
      tags:
        - Accounts
      summary: Get token transfers of an address
      parameters:
        - name: address
          in: path
          required: true
          description: 'Account address. Example: 0xf6fd5fca4bd769ba495b29b98dba5f2ecf4ceed3'
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: 'Paging limit'
          schema:
            type: integer
        - name: cursor
          in: query
          required: false
          description: 'Paging cursor'
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/TokenTransferResponse'
                      paging:
                        type: object
                        properties:
                          nextCursor:
                            type: string
        "500":
          description: internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /accounts/{address}/tokens/{contractAddress}/transfers:
    get:
      tags:
        - Accounts
      summary: Get token transfers of an address with a contract
      parameters:
        - name: address
          in: path
          required: true
          description: 'Account address. Example: 0xf6fd5fca4bd769ba495b29b98dba5f2ecf4ceed3'
          schema:
            type: string
        - name: contractAddress
          in: path
          required: true
          description: 'ContractAddress address. Example: 0x32950db2a7164ae833121501c797d79e7b79d74c'
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: 'Paging limit'
          schema:
            type: integer
        - name: cursor
          in: query
          required: false
          description: 'Paging cursor'
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/TokenTransferResponse'
                      paging:
                        type: object
                        properties:
                          nextCursor:
                            type: string
        "500":
          description: internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /accounts/{address}/txs:
    get:
      tags:
        - Accounts
      summary: Get transactions of an address
      parameters:
        - name: address
          in: path
          required: true
          description: 'Account address. Example: 0xf6fd5fca4bd769ba495b29b98dba5f2ecf4ceed3'
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: 'Paging limit'
          schema:
            type: integer
        - name: cursor
          in: query
          required: false
          description: 'Paging cursor'
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/TxResponse'
                      paging:
                        type: object
                        properties:
                          nextCursor:
                            type: string
        "500":
          description: internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /accounts/{address}/internal_txs/transfers:
    get:
      tags:
        - Accounts
      summary: Get internal tx transfers
      description: Retrieve internal RON token transfers triggered by smart contract interactions (OpCode CALL) for a given address.
      parameters:
        - name: address
          in: path
          required: true
          description: 'Account address. Example: 0xf6fd5fca4bd769ba495b29b98dba5f2ecf4ceed3'
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: 'Paging limit'
          schema:
            type: integer
        - name: cursor
          in: query
          required: false
          description: 'Paging cursor'
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/InternalTxResponse'
                      paging:
                        type: object
                        properties:
                          nextCursor:
                            type: string
        "500":
          description: internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /blocks/finalized/number:
    get:
      tags:
        - Blocks
      summary: Get finalized block number
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/BlockNumberResponse'
        "500":
          description: internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /blocks/latest/number:
    get:
      tags:
        - Blocks
      summary: Get latest block number
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/BlockNumberResponse'
        "500":
          description: internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /blocks/{blockNumber}/txs:
    get:
      tags:
        - Blocks
      summary: Get transactions by block number
      parameters:
        - name: blockNumber
          in: path
          required: true
          description: 'Block Number'
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/TxResponse'
        "500":
          description: internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /blocks/{blockNumber}:
    get:
      tags:
        - Blocks
      summary: Get block by number
      parameters:
        - name: blockNumber
          in: path
          required: true
          description: 'Block Number'
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/BlockResponse'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /blocks:
    get:
      tags:
        - Blocks
      summary: Get block by hash, timestamp, block number range
      parameters:
        - name: hash
          in: query
          required: false
          description: 'Block hash'
          schema:
            type: string
        - name: timestamp
          in: query
          required: false
          description: 'Block timestamp, get the block where it life span covers the input timestamp'
          schema:
            type: integer
        - name: fromBlock
          in: query
          required: false
          description: 'Start block number, required if toBlock is present'
          schema:
            type: integer
        - name: toBlock
          in: query
          required: false
          description: 'End block number, required if fromBlock is present'
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    oneOf:
                      - $ref: '#/components/schemas/BlockResponse'
                      - type: object
                        properties:
                          items:
                            $ref: '#/components/schemas/BlockResponse'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /collections/{contractAddress}/tokens/{tokenId}/owners:
    get:
      tags:
        - Collections
      summary: Get owners of an NFT
      parameters:
        - name: contractAddress
          in: path
          required: true
          description: 'ContractAddress address. Example: 0x32950db2a7164ae833121501c797d79e7b79d74c'
          schema:
            type: string
        - name: tokenId
          in: path
          required: true
          description: 'TokenId'
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: 'Paging limit'
          schema:
            type: integer
        - name: cursor
          in: query
          required: false
          description: 'Paging cursor'
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/NFTOwnerResponse'
                      paging:
                        type: object
                        properties:
                          nextCursor:
                            type: string
        "500":
          description: internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /collections/{contractAddress}/tokens/{tokenId}/transfers:
    get:
      tags:
        - Collections
      summary: Get token transfers of an NFT
      parameters:
        - name: contractAddress
          in: path
          required: true
          description: 'ContractAddress address. Example: 0x32950db2a7164ae833121501c797d79e7b79d74c'
          schema:
            type: string
        - name: tokenId
          in: path
          required: true
          description: 'TokenId'
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: 'Paging limit'
          schema:
            type: integer
        - name: cursor
          in: query
          required: false
          description: 'Paging cursor'
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/TokenTransferResponse'
                      paging:
                        type: object
                        properties:
                          nextCursor:
                            type: string
        "500":
          description: internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /collections/{contractAddress}/tokens/{tokenId}:
    get:
      tags:
        - Collections
      summary: Get detail of an NFT
      parameters:
        - name: contractAddress
          in: path
          required: true
          description: 'ContractAddress address. Example: 0x32950db2a7164ae833121501c797d79e7b79d74c'
          schema:
            type: string
        - name: tokenId
          in: path
          required: true
          description: 'TokenId'
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/NFTResponse'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /collections/{contractAddress}/tokens/metadata/refresh_sync:
    post:
      tags:
        - Collections
      summary: Refresh NFTs of a collection in synchronous manner
      parameters:
        - name: contractAddress
          in: path
          required: true
          description: 'ContractAddress address. Example: 0x32950db2a7164ae833121501c797d79e7b79d74c'
          schema:
            type: string
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenIdsRefreshRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/RefreshResultResponse'
        "500":
          description: internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /collections/{contractAddress}/tokens/metadata/refresh_async:
    post:
      tags:
        - Collections
      summary: Refresh NFTs of a collection in asynchronous manner
      parameters:
        - name: contractAddress
          in: path
          required: true
          description: 'ContractAddress address. Example: 0x32950db2a7164ae833121501c797d79e7b79d74c'
          schema:
            type: string
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenIdsRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
        "500":
          description: internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /collections/{contractAddress}/tokens:
    post:
      tags:
        - Collections
      summary: Get details of multiple NFTs
      parameters:
        - name: contractAddress
          in: path
          required: true
          description: 'ContractAddress address. Example: 0x32950db2a7164ae833121501c797d79e7b79d74c'
          schema:
            type: string
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenIdsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/NFTResponse'
        "500":
          description: internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Collections
      summary: Get NFTs from a collection
      parameters:
        - name: contractAddress
          in: path
          required: true
          description: 'ContractAddress address. Example: 0x32950db2a7164ae833121501c797d79e7b79d74c'
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: 'Paging limit'
          schema:
            type: integer
        - name: cursor
          in: query
          required: false
          description: 'Paging cursor'
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/NFTResponse'
                      paging:
                        type: object
                        properties:
                          nextCursor:
                            type: string
        "500":
          description: internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /collections/{contractAddress}/owners/{address}:
    get:
      tags:
        - Collections
      summary: Get the number of collection holdings by address
      parameters:
        - name: contractAddress
          in: path
          required: true
          description: 'ContractAddress address. Example: 0x32950db2a7164ae833121501c797d79e7b79d74c'
          schema:
            type: string
        - name: address
          in: path
          required: true
          description: 'Account address. Example: 0xf6fd5fca4bd769ba495b29b98dba5f2ecf4ceed3'
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: 'Paging limit'
          schema:
            type: integer
        - name: cursor
          in: query
          required: false
          description: 'Paging cursor'
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/CollectionOwnerResponse'
        "500":
          description: internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /collections/{contractAddress}/owners:
    get:
      tags:
        - Collections
      summary: Get collection holder list
      parameters:
        - name: contractAddress
          in: path
          required: true
          description: 'ContractAddress address. Example: 0x32950db2a7164ae833121501c797d79e7b79d74c'
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: 'Paging limit'
          schema:
            type: integer
        - name: cursor
          in: query
          required: false
          description: 'Paging cursor'
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/CollectionOwnerResponse'
                      paging:
                        type: object
                        properties:
                          nextCursor:
                            type: string
        "500":
          description: internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /collections/{contractAddress}/transfers:
    get:
      tags:
        - Collections
      summary: Get collection token transfers
      parameters:
        - name: contractAddress
          in: path
          required: true
          description: 'ContractAddress address. Example: 0x32950db2a7164ae833121501c797d79e7b79d74c'
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: 'Paging limit'
          schema:
            type: integer
        - name: order
          in: query
          required: false
          description: 'Paging order, valid values: "asc", "desc". Default: "desc"'
          schema:
            type: string
        - name: cursor
          in: query
          required: false
          description: 'Paging cursor'
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/TokenTransferResponse'
                      paging:
                        type: object
                        properties:
                          nextCursor:
                            type: string
        "500":
          description: internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /collections/{contractAddress}:
    get:
      tags:
        - Collections
      summary: Get collection detail
      parameters:
        - name: contractAddress
          in: path
          required: true
          description: 'ContractAddress address. Example: 0x32950db2a7164ae833121501c797d79e7b79d74c'
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/CollectionResponse'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /collections:
    post:
      tags:
        - Collections
      summary: Get details of multiple collections
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionIdsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/CollectionResponse'
        "500":
          description: internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /contracts/{contractAddress}:
    get:
      tags:
        - Contracts
      summary: Get detail of a contract
      parameters:
        - name: contractAddress
          in: path
          required: true
          description: 'ContractAddress address. Example: 0x32950db2a7164ae833121501c797d79e7b79d74c'
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/ContractResponse'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /contracts:
    post:
      tags:
        - Contracts
      summary: Get details of multiple contracts
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionIdsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/ContractResponse'
        "500":
          description: internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /txs/{txHash}/internal_txs:
    get:
      tags:
        - Txs
      summary: Get internal transaction of a transaction
      parameters:
        - name: txHash
          in: path
          required: true
          description: 'Transaction hash'
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/InternalTxResponse'
        "500":
          description: internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /txs/{txHash}:
    get:
      tags:
        - Txs
      summary: Get detail of a transaction
      parameters:
        - name: txHash
          in: path
          required: true
          description: 'Transaction hash'
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/InternalTxResponse'
        "404":
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /txs/:
    post:
      tags:
        - Txs
      summary: Get details of multiple transactions
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TxHashesRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/TxResponse'
        "500":
          description: internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        errorCode:
          type: integer
        message:
          type: string
    AccountCollectionResponse:
      type: object
      properties:
        contractAddress:
          type: string
        name:
          type: string
        symbol:
          type: string
        standard:
          type: string
        balance:
          type: string
        decimals:
          type: integer
        tokenCount:
          type: integer
        metadata:
          type: object
    AccountNFTResponse:
      type: object
      properties:
        contractAddress:
          type: string
        tokenId:
          type: string
        balance:
          type: string
        name:
          type: string
        symbol:
          type: string
        standard:
          type: string
        tokenUri:
          type: string
        metadata:
          type: object
    AccountActivitySearchRequest:
      type: object
      properties:
        fromBlock:
          type: integer
        toBlock:
          type: integer
        activityTypes:
          type: array
          items:
            type: string
          example: [ "ContractInteraction",
                     "RONTransfer",
                     "ScatterDisperse",
                     "Transfer",
                     "KatanaSwap",
                     "Stake",
                     "Mint",
                     "Approve",
                     "ContractCreation",
                     "ClaimRewards",
                     "KatanaAddLiquidity",
                     "Unstake",
                     "Restake",
                     "Withdraw",
                     "KatanaRemoveLiquidity",
                     "Burn",
                     "Deposit",
                     "StakeRewards" ]
        limit:
          type: string
        cursor:
          type: string
    accountActivity:
      type: object
      properties:
        address:
          type: string
        blockNumber:
          type: integer
        txIndex:
          type: integer
        txHash:
          type: string
        activity:
          type: string
        blockTime:
          type: integer
        details:
          $ref: '#/components/schemas/activityDetails'
    activityDetails:
      type: object
      properties:
        contract:
          $ref: '#/components/schemas/ContractResponse'
        sends:
          type: array
          items:
            $ref: '#/components/schemas/activityTransfer'
        receives:
          type: array
          items:
            $ref: '#/components/schemas/activityTransfer'
        approvals:
          type: array
          items:
            $ref: '#/components/schemas/activityApproval'
        orders:
          type: array
          items:
            $ref: '#/components/schemas/orderInfo'
    activityTransfer:
      type: object
      properties:
        from:
          type: string
        to:
          type: string
        amount:
          type: string
        tokenId:
          type: string
        token:
          $ref: '#/components/schemas/activityToken'
    activityToken:
      type: object
      properties:
        contractAddress:
          type: string
        name:
          type: string
        symbol:
          type: string
        standard:
          type: string
        decimals:
          type: string
    activityApproval:
      type: object
      properties:
        owner:
          type: string
        spender:
          type: string
        amount:
          type: string
        tokenId:
          type: string
        isAll:
          type: boolean
        token:
          $ref: '#/components/schemas/activityToken'
    orderInfo:
      type: object
      properties:
        maker:
          type: string
        taker:
          type: string
        price:
          type: string
        paymentToken:
          $ref: '#/components/schemas/activityToken'
        assets:
          type: array
          items:
            $ref: '#/components/schemas/orderAsset'
    orderAsset:
      type: object
      properties:
        tokenStandard:
          type: string
        address:
          $ref: '#/components/schemas/activityToken'
        tokenId:
          type: string
        amount:
          type: string
    BlockNumberResponse:
      type: object
      properties:
        blockNumber:
          type: integer
    BlockResponse:
      type: object
      properties:
        hash:
          type: string
        number:
          type: integer
        parentHash:
          type: string
        transactions:
          type: array
          items:
            type: string
        nonce:
          type: integer
        mixHash:
          type: string
        logsBloom:
          type: string
        stateRoot:
          type: string
        transactionsRoot:
          type: string
        receiptsRoot:
          type: string
        coinbase:
          type: string
        difficulty:
          type: integer
        totalDifficulty:
          type: integer
        extraData:
          type: string
        size:
          type: integer
        gasLimit:
          type: integer
        gasUsed:
          type: integer
        baseFeePerGas:
          type: string
        timestamp:
          type: integer
    NFTOwnerResponse:
      type: object
      properties:
        address:
          type: string
        balance:
          type: string
    CollectionOwnerResponse:
      type: object
      properties:
        address:
          type: string
        balance:
          type: string
        tokenCount:
          type: integer
    RefreshResultResponse:
      type: object
      properties:
        successes:
          type: array
          items:
            type: string
        failures:
          type: array
          items:
            type: string
    TokenIdsRequest:
      type: object
      properties:
        tokenIds:
          type: array
          items:
            type: string
    TokenIdsRefreshRequest:
      type: object
      properties:
        maxWait:
          type: integer
          description: "unit: milliseconds, when maxWait exceeds server timeout, then server timeout will be used instead"
        tokenIds:
          type: array
          items:
            type: string
    CollectionResponse:
      type: object
      properties:
        contractAddress:
          type: string
        name:
          type: string
        symbol:
          type: string
        standard:
          type: string
        totalSupply:
          type: string
        totalOwners:
          type: integer
        totalTransfers:
          type: integer
        metadata:
          type: object
    CollectionIdsRequest:
      type: object
      properties:
        contractAddresses:
          type: array
          items:
            type: string
    ContractResponse:
      type: object
      properties:
        address:
          type: string
        name:
          type: string
        symbol:
          type: string
        standard:
          type: string
        creator:
          type: string
        createdAtBlock:
          type: integer
        verifiedName:
          type: string
        verifiedSymbol:
          type: string
        verifiedStandard:
          type: string
    InternalTxResponse:
      type: object
      properties:
        transactionHash:
          type: string
        order:
          type: integer
        opcode:
          type: string
        type:
          type: string
        value:
          type: string
        input:
          type: string
        from:
          type: string
        to:
          type: string
        success:
          type: boolean
        error:
          type: string
        blockNumber:
          type: integer
        blockHash:
          type: string
        blockTime:
          type: integer
    NFTResponse:
      type: object
      properties:
        tokenId:
          type: string
        contractAddress:
          type: string
        name:
          type: string
        symbol:
          type: string
        standard:
          type: string
        tokenUri:
          type: string
        metadata:
          type: object
    TokenTransferSearchRequest:
      type: object
      properties:
        from:
          type: string
        to:
          type: string
        relateTo:
          type: string
        contractAddress:
          type: string
        fromBlock:
          type: string
        toBlock:
          type: string
        tokenStandards:
          type: array
          items:
            type: string
        limit:
          type: integer
        cursor:
          type: string
    TokenTransferResponse:
      type: object
      properties:
        blockNumber:
          type: integer
        logIndex:
          type: integer
        tokenId:
          type: string
        contractAddress:
          type: string
        tokenStandard:
          type: string
        tokenName:
          type: string
        tokenSymbol:
          type: string
        decimals:
          type: integer
        from:
          type: string
        to:
          type: string
        value:
          type: string
        blockHash:
          type: string
        transactionHash:
          type: string
        blockTime:
          type: integer
    TxHashesRequest:
      type: object
      properties:
        hashes:
          type: array
          items:
            type: string
    TxSearchRequest:
      type: object
      properties:
        from:
          type: string
        to:
          type: string
        contractAddress:
          type: string
        payer:
          type: string
        relateTo:
          type: string
        fromBlock:
          type: string
        toBlock:
          type: string
        txActions:
          type: array
          items:
            type: string
        limit:
          type: integer
        cursor:
          type: string
    TxResponse:
      type: object
      properties:
        transactionHash:
          type: string
        transactionIndex:
          type: integer
        blockHash:
          type: string
        blockNumber:
          type: integer
        from:
          type: string
        to:
          type: string
        contractAddress:
          type: string
        status:
          type: integer
        gas:
          type: integer
        gasPrice:
          type: string
        effectiveGasPrice:
          type: string
        gasUsed:
          type: integer
        cumulativeGasUsed:
          type: integer
        logsBloom:
          type: string
        input:
          type: string
        nonce:
          type: integer
        value:
          type: string
        type:
          type: integer
        v:
          type: string
        r:
          type: string
        s:
          type: string
        blockTime:
          type: integer
        chainId:
          type: string
        maxFeePerGas:
          type: string
        maxPriorityFeePerGas:
          type: string
        payer:
          type: string
        payerV:
          type: string
        payerR:
          type: string
        payerS:
          type: string
        expiredTime:
          type: integer
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: X-API-KEY
      in: header

security:
  - ApiKeyAuth: []
